[
 {
  "app": "Software",
  "attach_file": "/files/color-flowchart-simple.jpg",
  "category": "Getting Started",
  "content": "<div class=\"ql-editor read-mode\"><p>Software development is the process of designing, building, testing, and maintaining software applications. It involves programming, problem-solving, and engineering to create functional solutions for users.</p><p>The development process follows the <strong>Software Development Life Cycle (SDLC)</strong>, which includes <strong>planning, designing, coding, testing, deployment, and maintenance</strong>. Developers use programming languages like <strong>Python, Java, JavaScript, and C++</strong>, along with frameworks such as <strong>React, Angular, and Django</strong>.</p><p><br></p></div>",
  "docstatus": 0,
  "doctype": "Document",
  "modified": "2025-03-11 23:21:56.962975",
  "name": "UM-00001",
  "published": 1,
  "sub_category": "Introduction",
  "title": "Introduction to Software Development"
 },
 {
  "app": "Software",
  "attach_file": null,
  "category": "Getting Started",
  "content": "<div class=\"ql-editor read-mode\"><p>Software powers everything from mobile apps and web platforms to enterprise systems and artificial intelligence. It enables businesses, governments, and individuals to automate tasks, process data, and interact with technology effectively.</p><p><br></p><p><br></p></div>",
  "docstatus": 0,
  "doctype": "Document",
  "modified": "2025-03-11 20:48:41.846009",
  "name": "UM-00002",
  "published": 1,
  "sub_category": "Introduction",
  "title": "Why is Software Development Important?"
 },
 {
  "app": "Software",
  "attach_file": null,
  "category": "Getting Started",
  "content": "<div class=\"ql-editor read-mode\"><ol><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>Automation:</strong> Reduces manual effort and increases efficiency.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>Innovation:</strong> Enables new technologies and digital transformation.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>Scalability:</strong> Supports business growth and adaptability.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>Security:</strong> Helps protect data and ensure compliance with regulations.</li></ol></div>",
  "docstatus": 0,
  "doctype": "Document",
  "modified": "2025-03-11 20:48:49.575438",
  "name": "UM-00003",
  "published": 1,
  "sub_category": "Introduction",
  "title": "Key Benefits of Software Development:"
 },
 {
  "app": "Software",
  "attach_file": null,
  "category": "Getting Started",
  "content": "<div class=\"ql-editor read-mode\"><p>Software development follows a structured approach known as the <strong>Software Development Lifecycle (SDLC)</strong>, which includes the following stages:</p><p><br></p><p><strong>1. Planning &amp; Requirement Analysis</strong></p><ol><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Define project goals and scope.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Identify user needs and technical requirements.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Conduct feasibility studies and risk assessments.</li></ol><p><strong>2. Design</strong></p><ol><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Create system architecture and data models.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Develop UI/UX wireframes and prototypes.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Define software components and workflows.</li></ol><p><strong>3. Development (Coding &amp; Implementation)</strong></p><ol><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Write the source code using programming languages.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Follow coding best practices and version control.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Integrate APIs, databases, and security features.</li></ol><p><strong>4. Testing</strong></p><ol><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Perform unit, integration, and system testing.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Identify and fix bugs or performance issues.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Ensure software meets functional and security standards.</li></ol><p><strong>5. Deployment</strong></p><ol><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Release the software to users or production environments.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Set up cloud hosting or local installations.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Monitor performance and address initial issues.</li></ol><p><strong>6. Maintenance &amp; Updates</strong></p><ol><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Regularly update software for improvements and bug fixes.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Optimize performance and security.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Add new features based on user feedback.</li></ol><p><br></p></div>",
  "docstatus": 0,
  "doctype": "Document",
  "modified": "2025-03-11 20:48:54.912620",
  "name": "UM-00004",
  "published": 1,
  "sub_category": "Lifecycle",
  "title": "Software Development Lifecycle (SDLC)"
 },
 {
  "app": "Software",
  "attach_file": null,
  "category": "Getting Started",
  "content": "<div class=\"ql-editor read-mode\"><p><strong>1. Web Development</strong></p><ol><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Frontend Development (HTML, CSS, JavaScript)</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Backend Development (Node.js, Python, Java)</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Full-stack Development</li></ol><p><strong>2. Mobile App Development</strong></p><ol><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>iOS Development (Swift, Objective-C)</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Android Development (Kotlin, Java)</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Cross-platform (Flutter, React Native)</li></ol><p><strong>3. Desktop Software Development</strong></p><ol><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Windows (C#, .NET)</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>macOS (Swift, Objective-C)</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Linux (Python, C++)</li></ol><p><strong>4. Embedded Systems Development</strong></p><ol><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>IoT and Hardware Programming (C, C++)</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Firmware Development</li></ol><p><strong>5. Game Development</strong></p><ol><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Unity (C#)</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Unreal Engine (C++)</li></ol><p><strong>6. Cloud &amp; DevOps Development</strong></p><ol><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Cloud Computing (AWS, Azure, Google Cloud)</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>DevOps (CI/CD, Docker, Kubernetes)</li></ol><p><strong>7. Artificial Intelligence &amp; Machine Learning</strong></p><ol><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>Data Science (Python, R)</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span>AI/ML Models (TensorFlow, PyTorch)</li></ol><p><br></p></div>",
  "docstatus": 0,
  "doctype": "Document",
  "modified": "2025-03-11 20:49:03.536541",
  "name": "UM-00005",
  "published": 1,
  "sub_category": "Development",
  "title": "Types of Software Development"
 },
 {
  "app": "Software",
  "attach_file": null,
  "category": "Programming Languages",
  "content": "<div class=\"ql-editor read-mode\"><p>Python is a high-level, interpreted programming language known for its simplicity, readability, and versatility. Created by <strong>Guido van Rossum</strong> in 1991, Python has become one of the most widely used programming languages across various domains, including web development, data science, artificial intelligence, automation, and more.</p></div>",
  "docstatus": 0,
  "doctype": "Document",
  "modified": "2025-03-11 20:49:55.210877",
  "name": "UM-00006",
  "published": 1,
  "sub_category": "Python",
  "title": "Introduction to Python"
 },
 {
  "app": "Software",
  "attach_file": null,
  "category": "Programming Languages",
  "content": "<div class=\"ql-editor read-mode\"><ol><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>Easy to Learn and Use</strong> – Python’s syntax is simple and resembles natural language, making it beginner-friendly.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>Interpreted Language</strong> – Python executes code line by line, which simplifies debugging and testing.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>Cross-Platform Compatibility</strong> – Python runs on multiple operating systems, including Windows, macOS, and Linux.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>Extensive Libraries and Frameworks</strong> – Libraries like NumPy, Pandas, TensorFlow, and Flask enhance Python’s functionality.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>Object-Oriented and Functional Programming</strong> – Python supports multiple programming paradigms.</li></ol></div>",
  "docstatus": 0,
  "doctype": "Document",
  "modified": "2025-03-11 20:50:05.281618",
  "name": "UM-00007",
  "published": 1,
  "sub_category": "Python",
  "title": "Key Features of Python"
 },
 {
  "app": "Software",
  "attach_file": null,
  "category": "Programming Languages",
  "content": "<div class=\"ql-editor read-mode\"><p><strong>1. Web Development</strong></p><p>Python frameworks like <strong>Django</strong> and <strong>Flask</strong> help developers create secure and scalable web applications.</p><p><strong>2. Data Science &amp; Machine Learning</strong></p><p>Python is widely used in data analysis, visualization, and AI with libraries like <strong>Pandas, Matplotlib, TensorFlow, and Scikit-learn</strong>.</p><p><strong>3. Automation &amp; Scripting</strong></p><p>Python’s simplicity makes it ideal for automating repetitive tasks, such as file management, data extraction, and testing.</p><p><strong>4. Cybersecurity &amp; Ethical Hacking</strong></p><p>Security professionals use Python for penetration testing, network scanning, and vulnerability assessment.</p><p><strong>5. Game Development</strong></p><p>Python’s <strong>Pygame</strong> library enables developers to build simple 2D games efficiently.</p></div>",
  "docstatus": 0,
  "doctype": "Document",
  "modified": "2025-03-11 20:50:21.339418",
  "name": "UM-00008",
  "published": 1,
  "sub_category": "Python",
  "title": "Applications of Python"
 },
 {
  "app": "Software",
  "attach_file": null,
  "category": "Programming Languages",
  "content": "<div class=\"ql-editor read-mode\"><p>JavaScript (JS) is a powerful, high-level programming language that enables dynamic and interactive web experiences. Created by <strong>Brendan Eich</strong> in 1995, JavaScript has evolved into one of the most essential technologies for web development, alongside HTML and CSS. It is widely used for client-side scripting, but with the advent of <strong>Node.js</strong>, it is also used for server-side development.</p></div>",
  "docstatus": 0,
  "doctype": "Document",
  "modified": "2025-03-11 20:50:41.118628",
  "name": "UM-00009",
  "published": 1,
  "sub_category": "JavaScript",
  "title": "Introduction to JavaScript"
 },
 {
  "app": "Software",
  "attach_file": null,
  "category": "Programming Languages",
  "content": "<div class=\"ql-editor read-mode\"><ol><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>Lightweight and Fast</strong> – JavaScript executes directly in the browser, making it fast and efficient.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>Cross-Platform</strong> – Works on all modern web browsers and can be used for desktop and mobile applications.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>Event-Driven and Asynchronous</strong> – Supports asynchronous programming with features like <strong>callbacks, promises, and async/await</strong>.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>Object-Oriented and Functional</strong> – JavaScript supports both programming paradigms.</li><li data-list=\"bullet\"><span class=\"ql-ui\" contenteditable=\"false\"></span><strong>Rich Ecosystem</strong> – A vast number of libraries and frameworks like <strong>React, Angular, Vue.js, and Node.js</strong> extend JavaScript’s capabilities.</li></ol></div>",
  "docstatus": 0,
  "doctype": "Document",
  "modified": "2025-03-11 20:50:56.408123",
  "name": "UM-00010",
  "published": 1,
  "sub_category": "JavaScript",
  "title": "Key Features of JavaScript"
 },
 {
  "app": "Software",
  "attach_file": null,
  "category": "Programming Languages",
  "content": "<div class=\"ql-editor read-mode\"><p><strong>1. Web Development</strong></p><p>JavaScript powers interactive websites, animations, and responsive user interfaces using <strong>DOM manipulation</strong>.</p><p><strong>2. Frontend Frameworks</strong></p><p>Modern frontend frameworks like <strong>React, Angular, and Vue.js</strong> help build complex web applications efficiently.</p><p><strong>3. Backend Development</strong></p><p>With <strong>Node.js</strong>, JavaScript can be used for server-side programming, enabling full-stack development with a single language.</p><p><strong>4. Mobile App Development</strong></p><p>Frameworks like <strong>React Native and Ionic</strong> allow developers to create cross-platform mobile applications.</p><p><strong>5. Game Development</strong></p><p>JavaScript, combined with WebGL and frameworks like <strong>Phaser.js</strong>, enables the development of browser-based games.</p></div>",
  "docstatus": 0,
  "doctype": "Document",
  "modified": "2025-03-11 20:51:05.557247",
  "name": "UM-00011",
  "published": 1,
  "sub_category": "JavaScript",
  "title": "Applications of JavaScript"
 }
]